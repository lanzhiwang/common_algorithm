#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
通过排列组合学习递归代码的写法

['红', '黄', '蓝', '绿']

target, source
[] ['红', '黄', '蓝', '绿']

['红'] ['黄', '蓝', '绿']
['黄'] ['红', '蓝', '绿']
['蓝'] ['红', '黄', '绿']
['绿'] ['红', '黄', '蓝']

['红', '黄'] ['蓝', '绿']  return [['红', '黄', '蓝', '绿'], ['红', '黄', '绿', '蓝']]
['红', '蓝'] ['黄', '绿']  return [['红', '蓝', '黄', '绿'], ['红', '蓝', '绿', '黄']]
['红', '绿'] ['黄', '蓝']


['红', '黄', '蓝'] ['绿']  return [['红', '黄', '蓝', '绿']]
['红', '黄', '绿'] ['蓝']  return [['红', '黄', '绿', '蓝']]
return [['红', '黄', '蓝', '绿'], ['红', '黄', '绿', '蓝']]

['红', '黄', '蓝', '绿'] []
return [['红', '黄', '蓝', '绿']]
"""


def foo(target, source):
    result = []
    if not len(source):
        return [target]
    for i in range(len(source)):
        temp = target[:]
        temp.append(source[i])
        temp_result = foo(temp, source[0:i] + source[i + 1:])
        result.extend(temp_result)
    return result

print(foo([], ['红', '黄', '蓝', '绿']))

"""
[
    ['红', '黄', '蓝', '绿'],
    ['红', '黄', '绿', '蓝'],
    ['红', '蓝', '黄', '绿'],
    ['红', '蓝', '绿', '黄'],
    ['红', '绿', '黄', '蓝'],
    ['红', '绿', '蓝', '黄'],
    ['黄', '红', '蓝', '绿'],
    ['黄', '红', '绿', '蓝'],
    ['黄', '蓝', '红', '绿'],
    ['黄', '蓝', '绿', '红'],
    ['黄', '绿', '红', '蓝'],
    ['黄', '绿', '蓝', '红'],
    ['蓝', '红', '黄', '绿'],
    ['蓝', '红', '绿', '黄'],
    ['蓝', '黄', '红', '绿'],
    ['蓝', '黄', '绿', '红'],
    ['蓝', '绿', '红', '黄'],
    ['蓝', '绿', '黄', '红'],
    ['绿', '红', '黄', '蓝'],
    ['绿', '红', '蓝', '黄'],
    ['绿', '黄', '红', '蓝'],
    ['绿', '黄', '蓝', '红'],
    ['绿', '蓝', '红', '黄'],
    ['绿', '蓝', '黄', '红']
]

"""
