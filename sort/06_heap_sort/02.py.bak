
# 最大堆
def heapify(unsorted, index, heap_size):
    largest = index
    left_index = 2 * index + 1
    right_index = 2 * index + 2

    if left_index < heap_size and unsorted[left_index] > unsorted[largest]:
        largest = left_index

    if right_index < heap_size and unsorted[right_index] > unsorted[largest]:
        largest = right_index

    if largest != index:
        unsorted[largest], unsorted[index] = unsorted[index], unsorted[largest]
        heapify(unsorted, largest, heap_size)


if __name__ == '__main__':
    user_input = '99 5 36 7 22 17 46 12'
    unsorted = [int(item) for item in user_input.split(' ')]
    print('source unsorted: %s' % unsorted)  # [99, 5, 36, 7, 22, 17, 46, 12]
    heapify(unsorted, 3, 8)
    print(unsorted)  # [99, 5, 36, 12, 22, 17, 46, 7]
    heapify(unsorted, 2, 8)
    print(unsorted)  # [99, 5, 46, 12, 22, 17, 36, 7]
    heapify(unsorted, 1, 8)
    print(unsorted)  # [99, 22, 46, 12, 5, 17, 36, 7]
    heapify(unsorted, 0, 8)
    print(unsorted)  # [99, 22, 46, 12, 5, 17, 36, 7]


"""
堆化

source unsorte：
99 5 36 7 22 17 46 12

            99
          /    \
         5      36
        / \     / \
       7  22   17 46
      /
     12

heapify(unsorted, 3, 8)
[99, 5, 36, 12, 22, 17, 46, 7]


            99
          /    \
         5      36
        / \     / \
       12  22   17 46
      /
      7


heapify(unsorted, 2, 8)
[99, 5, 46, 12, 22, 17, 36, 7]


            99
          /    \
         5      46
        / \     / \
       12  22   17 36
      /
      7


heapify(unsorted, 1, 8)
[99, 22, 46, 12, 5, 17, 36, 7]


            99
          /    \
         22      46
        / \     / \
       12  5   17 36
      /
      7


heapify(unsorted, 0, 8)
[99, 22, 46, 12, 5, 17, 36, 7]


            99
          /    \
         22      46
        / \     / \
       12  5   17 36
      /
      7

"""